// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Digital infra for vaccination certificates",
    "title": "Divoc Portal API",
    "version": "1.0.0"
  },
  "host": "52.172.216.52",
  "basePath": "/divoc/admin/api/v1",
  "paths": {
    "/analytics": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin",
              "monitoring"
            ]
          }
        ],
        "summary": "Get analytics query",
        "operationId": "getAnalytics",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/enrollments": {
      "get": {
        "summary": "get enrollments",
        "operationId": "getEnrollments",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Upload facility csv for bulk ingestion of pre enrollment",
        "parameters": [
          {
            "type": "file",
            "description": "Facility data in the form of csv",
            "name": "file",
            "in": "formData"
          },
          {
            "type": "string",
            "name": "programId",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/enrollments/uploads": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin"
            ]
          }
        ],
        "summary": "Get Enrollments uploads",
        "operationId": "getEnrollmentUploadHistory",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/enrollments/uploads/{uploadId}/errors": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin"
            ]
          }
        ],
        "summary": "Get all the error rows associated with given uploadId",
        "operationId": "getEnrollmentsUploadsErrors",
        "parameters": [
          {
            "type": "integer",
            "description": "Id of uploaded csv file",
            "name": "uploadId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden for user"
          },
          "404": {
            "description": "enrollments upload for given uploadID not found"
          }
        }
      }
    },
    "/facilities": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin",
              "controller",
              "facility-admin"
            ]
          }
        ],
        "summary": "get facilities",
        "operationId": "getFacilities",
        "parameters": [
          {
            "type": "string",
            "description": "Facility State",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Facility District",
            "name": "district",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Facility Type",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Program",
            "name": "programId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Program Status",
            "name": "programStatus",
            "in": "query"
          },
          {
            "type": "string",
            "name": "rateUpdatedFrom",
            "in": "query"
          },
          {
            "type": "string",
            "name": "rateUpdatedTo",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Facility"
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "hasRole": [
              "admin",
              "controller"
            ]
          }
        ],
        "summary": "Update facility",
        "operationId": "updateFacilities",
        "parameters": [
          {
            "description": "Facility Update Request",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FacilityUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Upload facility csv for bulk ingestion",
        "parameters": [
          {
            "type": "file",
            "description": "Facility data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/facilities/notify": {
      "post": {
        "security": [
          {
            "hasRole": [
              "admin",
              "controller"
            ]
          }
        ],
        "summary": "notify facilities",
        "operationId": "notifyFacilities",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "facilityId": {
                    "type": "string"
                  },
                  "pendingTasks": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/facility": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin",
              "facility-staff"
            ]
          }
        ],
        "summary": "get user facility details",
        "operationId": "getUserFacility",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Facility"
            }
          }
        }
      }
    },
    "/facility/groups": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Get facility groups",
        "operationId": "getFacilityGroups",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/UserGroup"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/facility/uploads": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin"
            ]
          }
        ],
        "summary": "Get all file uploads for facilties for given facility admin",
        "operationId": "getFacilityUploads",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/facility/uploads/{uploadId}/errors": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin"
            ]
          }
        ],
        "summary": "Get all the error rows associated with given uploadId",
        "operationId": "getFacilityUploadsErrors",
        "parameters": [
          {
            "type": "integer",
            "description": "Id of uploaded csv file",
            "name": "uploadId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden for user"
          },
          "404": {
            "description": "facility upload for given uploadID not found"
          }
        }
      }
    },
    "/facility/users": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Get users of a facility",
        "operationId": "getFacilityUsers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/FacilityUser"
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Update Facility User",
        "operationId": "updateFacilityUser",
        "parameters": [
          {
            "description": "Update facility user data",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FacilityUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Create Facility User",
        "operationId": "createFacilityUsers",
        "parameters": [
          {
            "description": "Create facility user data",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FacilityUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/facility/users/{userId}": {
      "delete": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Delete Facility User",
        "operationId": "deleteFacilityUser",
        "parameters": [
          {
            "type": "string",
            "description": "Id of facility user to delete",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/medicines": {
      "get": {
        "security": [
          {
            "hasRole": [
              "user",
              "admin"
            ]
          }
        ],
        "summary": "Get medicines",
        "operationId": "getMedicines",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/CreateMedicineRequest"
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "hasRole": [
              "admin"
            ]
          }
        ],
        "summary": "Create Medicine",
        "operationId": "createMedicine",
        "parameters": [
          {
            "description": "Facility data in the form of csv",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateMedicineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/programs": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin",
              "user",
              "controller",
              "facility-admin"
            ]
          }
        ],
        "summary": "get program list",
        "operationId": "getPrograms",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Program"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create program",
        "operationId": "createProgram",
        "parameters": [
          {
            "description": "Vaccination Program",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProgramRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/public": {
      "get": {
        "security": [],
        "summary": "Get public analytics query",
        "operationId": "getPublicAnalytics",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/vaccinator": {
      "post": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Create vaccinator user",
        "operationId": "createVaccinator",
        "parameters": [
          {
            "description": "Vaccinator Details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Vaccinator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/vaccinators": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin",
              "admin",
              "facility-staff"
            ]
          }
        ],
        "summary": "Get vaccinators",
        "operationId": "getVaccinators",
        "parameters": [
          {
            "type": "string",
            "description": "Facility Code",
            "name": "facilityCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Vaccinator Name",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vaccinator"
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Update Vaccinator",
        "operationId": "updateVaccinators",
        "parameters": [
          {
            "description": "Vaccinator Update Request",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VaccinatorUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Upload facility csv for bulk ingestion",
        "parameters": [
          {
            "type": "file",
            "description": "Facility data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/vaccinators/uploads": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin",
              "admin"
            ]
          }
        ],
        "summary": "Get Vaccinators uploads",
        "operationId": "getVaccinatorsUploadHistory",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/vaccinators/uploads/{uploadId}/errors": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin",
              "admin"
            ]
          }
        ],
        "summary": "Get all the error rows associated with given uploadId",
        "operationId": "getVaccinatorsUploadsErrors",
        "parameters": [
          {
            "type": "integer",
            "description": "Id of uploaded csv file",
            "name": "uploadId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden for user"
          },
          "404": {
            "description": "vaccinators upload for given uploadID not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "description": "Indian address format",
      "type": "object",
      "title": "Address",
      "required": [
        "addressLine1",
        "addressLine2",
        "district",
        "state",
        "pincode"
      ],
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "pincode": {
          "type": "integer"
        },
        "state": {
          "description": "State of address",
          "type": "string",
          "title": "The state schema",
          "example": [
            "Karnataka"
          ]
        }
      },
      "example": [
        {
          "addressLine1": "no. 23, some lane, some road",
          "addressLine2": "some nagar",
          "district": "bangalore south",
          "pincode": 560000,
          "state": "Karnataka"
        }
      ]
    },
    "CreateMedicineRequest": {
      "type": "object",
      "properties": {
        "effectiveUntil": {
          "description": "Effective until n months after the full vaccination schedule is completed",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "description": "Indicative price if fixed or max price available.",
          "type": "number"
        },
        "provider": {
          "type": "string"
        },
        "schedule": {
          "type": "object",
          "properties": {
            "repeatInterval": {
              "description": "Number of times the vaccination should be taken.",
              "type": "number"
            },
            "repeatTimes": {
              "description": "How many times vaccination should be taken",
              "type": "number"
            }
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive",
            "Blocked"
          ]
        },
        "vaccinationMode": {
          "type": "string",
          "enum": [
            "muscular injection",
            "oral",
            "nasal"
          ]
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Facility": {
      "properties": {
        "address": {
          "title": "Address",
          "$ref": "#/definitions/Address"
        },
        "admins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacilityAdmin"
          }
        },
        "averageRating": {
          "description": "Average Rating of Facility 0 to 5, 0 for no rating.",
          "type": "number",
          "title": "Average Rating",
          "default": 0
        },
        "category": {
          "type": "string",
          "title": "Category",
          "enum": [
            "GOVT",
            "PRIVATE"
          ]
        },
        "contact": {
          "type": "string",
          "title": "Contact number"
        },
        "email": {
          "type": "string",
          "title": "Facility Email"
        },
        "facilityCode": {
          "type": "string",
          "title": "Facility Code"
        },
        "facilityName": {
          "type": "string",
          "title": "Facility Name"
        },
        "geoLocation": {
          "type": "string",
          "title": "Geo Location"
        },
        "operatingHourEnd": {
          "type": "integer",
          "title": "Operating hours end of day"
        },
        "operatingHourStart": {
          "type": "integer",
          "title": "Operating hours start of day"
        },
        "programs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "programId": {
                "type": "string"
              },
              "rate": {
                "type": "number"
              },
              "rateUpdatedAt": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "statusUpdatedAt": {
                "type": "string"
              }
            }
          }
        },
        "serialNum": {
          "type": "integer",
          "title": "Serial Number"
        },
        "stamp": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "title": "Status of Facility",
          "enum": [
            "Active",
            "Inactive",
            "Blocked"
          ]
        },
        "type": {
          "type": "string",
          "title": "Type of Facility",
          "enum": [
            "Fixed location",
            "Mobile",
            "Both"
          ]
        },
        "websiteUrl": {
          "type": "string",
          "title": "Website URL"
        }
      }
    },
    "FacilityAdmin": {
      "properties": {
        "mobile": {
          "type": "string",
          "title": "Facility Admin Mobile Number"
        },
        "name": {
          "type": "string",
          "title": "Facility Admin Name"
        },
        "status": {
          "type": "string",
          "title": "Facility Admin Status"
        }
      }
    },
    "FacilityUpdateRequest": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "osid": {
            "type": "string"
          },
          "programs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "rate": {
                  "type": "number"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "status": {
            "type": "string"
          }
        }
      }
    },
    "FacilityUser": {
      "properties": {
        "employeeId": {
          "type": "string",
          "title": "Facility User Id"
        },
        "enabled": {
          "type": "boolean",
          "title": "enable/disable user"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroup"
          }
        },
        "id": {
          "type": "string",
          "title": "Facility User Id"
        },
        "mobileNumber": {
          "type": "string",
          "title": "Facility User Mobile Number"
        },
        "name": {
          "type": "string",
          "title": "Facility User Name"
        },
        "vaccinationRateLimits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VaccinationRateLimit"
          }
        }
      }
    },
    "Program": {
      "type": "object",
      "title": "Program",
      "required": [
        "name",
        "description",
        "startDate"
      ],
      "properties": {
        "description": {
          "type": "string",
          "title": "Description"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "title": "End Date"
        },
        "logoURL": {
          "type": "string",
          "title": "Logo URL"
        },
        "medicineIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "title": "Start Date"
        },
        "status": {
          "type": "string",
          "title": "Status",
          "enum": [
            "Active",
            "Inactive"
          ]
        }
      }
    },
    "ProgramRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "logoURL": {
          "type": "string"
        },
        "medicineIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        }
      }
    },
    "UserGroup": {
      "properties": {
        "id": {
          "type": "string",
          "title": "group id"
        },
        "name": {
          "type": "string",
          "title": "group name"
        }
      }
    },
    "VaccinationRateLimit": {
      "properties": {
        "programName": {
          "type": "string",
          "title": "Program Name"
        },
        "rateLimit": {
          "type": "integer",
          "title": "Maximum rate of vaccination"
        }
      }
    },
    "Vaccinator": {
      "type": "object",
      "title": "The Vaccinator Schema",
      "required": [
        "code",
        "nationalIdentifier",
        "name",
        "facilityIds",
        "mobileNumber",
        "averageRating",
        "trainingCertificate",
        "status"
      ],
      "properties": {
        "averageRating": {
          "type": "number"
        },
        "code": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "title": "vaccinator email"
        },
        "facilityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mobileNumber": {
          "type": "string",
          "maxLength": 10,
          "minLength": 10
        },
        "name": {
          "type": "string",
          "title": "Full name"
        },
        "nationalIdentifier": {
          "type": "string"
        },
        "programs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "certified": {
                "type": "boolean",
                "title": "if vaccinator has certificate for program"
              },
              "programId": {
                "type": "string",
                "title": "Id of the program"
              },
              "status": {
                "type": "string",
                "enum": [
                  "Active",
                  "Inactive"
                ]
              }
            }
          }
        },
        "signatureString": {
          "type": "string"
        },
        "signatures": {
          "type": "array",
          "items": {
            "$ref": "Signature.json#/definitions/Signature"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        },
        "trainingCertificate": {
          "type": "string"
        }
      }
    },
    "VaccinatorUpdateRequest": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "averageRating": {
            "type": "number"
          },
          "code": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "facilityIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mobileNumber": {
            "type": "string",
            "maxLength": 10,
            "minLength": 10
          },
          "name": {
            "type": "string"
          },
          "nationalIdentifier": {
            "type": "string"
          },
          "osid": {
            "type": "object"
          },
          "programs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "certified": {
                  "type": "boolean"
                },
                "programId": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Active",
                    "Inactive"
                  ]
                }
              }
            }
          },
          "signatureString": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "Inactive"
            ]
          },
          "trainingCertificate": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "hasRole": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "tokenUrl": "https://dumy.oauth.net/token",
      "scopes": {
        "admin": "scope of super admin",
        "facility-admin": "scope of facility admin"
      }
    }
  },
  "security": [
    {
      "hasRole": [
        "admin"
      ]
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Digital infra for vaccination certificates",
    "title": "Divoc Portal API",
    "version": "1.0.0"
  },
  "host": "52.172.216.52",
  "basePath": "/divoc/admin/api/v1",
  "paths": {
    "/analytics": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin",
              "monitoring"
            ]
          }
        ],
        "summary": "Get analytics query",
        "operationId": "getAnalytics",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/enrollments": {
      "get": {
        "summary": "get enrollments",
        "operationId": "getEnrollments",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Upload facility csv for bulk ingestion of pre enrollment",
        "parameters": [
          {
            "type": "file",
            "description": "Facility data in the form of csv",
            "name": "file",
            "in": "formData"
          },
          {
            "type": "string",
            "name": "programId",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/enrollments/uploads": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin"
            ]
          }
        ],
        "summary": "Get Enrollments uploads",
        "operationId": "getEnrollmentUploadHistory",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/enrollments/uploads/{uploadId}/errors": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin"
            ]
          }
        ],
        "summary": "Get all the error rows associated with given uploadId",
        "operationId": "getEnrollmentsUploadsErrors",
        "parameters": [
          {
            "type": "integer",
            "description": "Id of uploaded csv file",
            "name": "uploadId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden for user"
          },
          "404": {
            "description": "enrollments upload for given uploadID not found"
          }
        }
      }
    },
    "/facilities": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin",
              "controller",
              "facility-admin"
            ]
          }
        ],
        "summary": "get facilities",
        "operationId": "getFacilities",
        "parameters": [
          {
            "type": "string",
            "description": "Facility State",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Facility District",
            "name": "district",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Facility Type",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Program",
            "name": "programId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Program Status",
            "name": "programStatus",
            "in": "query"
          },
          {
            "type": "string",
            "name": "rateUpdatedFrom",
            "in": "query"
          },
          {
            "type": "string",
            "name": "rateUpdatedTo",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Facility"
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "hasRole": [
              "admin",
              "controller"
            ]
          }
        ],
        "summary": "Update facility",
        "operationId": "updateFacilities",
        "parameters": [
          {
            "description": "Facility Update Request",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FacilityUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Upload facility csv for bulk ingestion",
        "parameters": [
          {
            "type": "file",
            "description": "Facility data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/facilities/notify": {
      "post": {
        "security": [
          {
            "hasRole": [
              "admin",
              "controller"
            ]
          }
        ],
        "summary": "notify facilities",
        "operationId": "notifyFacilities",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotifyFacilitiesParamsBodyItems0"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/facility": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin",
              "facility-staff"
            ]
          }
        ],
        "summary": "get user facility details",
        "operationId": "getUserFacility",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Facility"
            }
          }
        }
      }
    },
    "/facility/groups": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Get facility groups",
        "operationId": "getFacilityGroups",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/UserGroup"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/facility/uploads": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin"
            ]
          }
        ],
        "summary": "Get all file uploads for facilties for given facility admin",
        "operationId": "getFacilityUploads",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/facility/uploads/{uploadId}/errors": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin"
            ]
          }
        ],
        "summary": "Get all the error rows associated with given uploadId",
        "operationId": "getFacilityUploadsErrors",
        "parameters": [
          {
            "type": "integer",
            "description": "Id of uploaded csv file",
            "name": "uploadId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden for user"
          },
          "404": {
            "description": "facility upload for given uploadID not found"
          }
        }
      }
    },
    "/facility/users": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Get users of a facility",
        "operationId": "getFacilityUsers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/FacilityUser"
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Update Facility User",
        "operationId": "updateFacilityUser",
        "parameters": [
          {
            "description": "Update facility user data",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FacilityUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Create Facility User",
        "operationId": "createFacilityUsers",
        "parameters": [
          {
            "description": "Create facility user data",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FacilityUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/facility/users/{userId}": {
      "delete": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Delete Facility User",
        "operationId": "deleteFacilityUser",
        "parameters": [
          {
            "type": "string",
            "description": "Id of facility user to delete",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/medicines": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin",
              "user"
            ]
          }
        ],
        "summary": "Get medicines",
        "operationId": "getMedicines",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/CreateMedicineRequest"
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "hasRole": [
              "admin"
            ]
          }
        ],
        "summary": "Create Medicine",
        "operationId": "createMedicine",
        "parameters": [
          {
            "description": "Facility data in the form of csv",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateMedicineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/programs": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin",
              "controller",
              "facility-admin",
              "user"
            ]
          }
        ],
        "summary": "get program list",
        "operationId": "getPrograms",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Program"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create program",
        "operationId": "createProgram",
        "parameters": [
          {
            "description": "Vaccination Program",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ProgramRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/public": {
      "get": {
        "security": [],
        "summary": "Get public analytics query",
        "operationId": "getPublicAnalytics",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/vaccinator": {
      "post": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Create vaccinator user",
        "operationId": "createVaccinator",
        "parameters": [
          {
            "description": "Vaccinator Details",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Vaccinator"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/vaccinators": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin",
              "facility-admin",
              "facility-staff"
            ]
          }
        ],
        "summary": "Get vaccinators",
        "operationId": "getVaccinators",
        "parameters": [
          {
            "type": "string",
            "description": "Facility Code",
            "name": "facilityCode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Vaccinator Name",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vaccinator"
              }
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "summary": "Update Vaccinator",
        "operationId": "updateVaccinators",
        "parameters": [
          {
            "description": "Vaccinator Update Request",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VaccinatorUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Upload facility csv for bulk ingestion",
        "parameters": [
          {
            "type": "file",
            "description": "Facility data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/vaccinators/uploads": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin",
              "facility-admin"
            ]
          }
        ],
        "summary": "Get Vaccinators uploads",
        "operationId": "getVaccinatorsUploadHistory",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/vaccinators/uploads/{uploadId}/errors": {
      "get": {
        "security": [
          {
            "hasRole": [
              "admin",
              "facility-admin"
            ]
          }
        ],
        "summary": "Get all the error rows associated with given uploadId",
        "operationId": "getVaccinatorsUploadsErrors",
        "parameters": [
          {
            "type": "integer",
            "description": "Id of uploaded csv file",
            "name": "uploadId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden for user"
          },
          "404": {
            "description": "vaccinators upload for given uploadID not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "description": "Indian address format",
      "type": "object",
      "title": "Address",
      "required": [
        "addressLine1",
        "addressLine2",
        "district",
        "state",
        "pincode"
      ],
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "pincode": {
          "type": "integer"
        },
        "state": {
          "description": "State of address",
          "type": "string",
          "title": "The state schema",
          "example": [
            "Karnataka"
          ]
        }
      },
      "example": [
        {
          "addressLine1": "no. 23, some lane, some road",
          "addressLine2": "some nagar",
          "district": "bangalore south",
          "pincode": 560000,
          "state": "Karnataka"
        }
      ]
    },
    "CreateMedicineRequest": {
      "type": "object",
      "properties": {
        "effectiveUntil": {
          "description": "Effective until n months after the full vaccination schedule is completed",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "description": "Indicative price if fixed or max price available.",
          "type": "number"
        },
        "provider": {
          "type": "string"
        },
        "schedule": {
          "type": "object",
          "properties": {
            "repeatInterval": {
              "description": "Number of times the vaccination should be taken.",
              "type": "number"
            },
            "repeatTimes": {
              "description": "How many times vaccination should be taken",
              "type": "number"
            }
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive",
            "Blocked"
          ]
        },
        "vaccinationMode": {
          "type": "string",
          "enum": [
            "muscular injection",
            "oral",
            "nasal"
          ]
        }
      }
    },
    "CreateMedicineRequestSchedule": {
      "type": "object",
      "properties": {
        "repeatInterval": {
          "description": "Number of times the vaccination should be taken.",
          "type": "number"
        },
        "repeatTimes": {
          "description": "How many times vaccination should be taken",
          "type": "number"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Facility": {
      "properties": {
        "address": {
          "title": "Address",
          "$ref": "#/definitions/Address"
        },
        "admins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacilityAdmin"
          }
        },
        "averageRating": {
          "description": "Average Rating of Facility 0 to 5, 0 for no rating.",
          "type": "number",
          "title": "Average Rating",
          "default": 0
        },
        "category": {
          "type": "string",
          "title": "Category",
          "enum": [
            "GOVT",
            "PRIVATE"
          ]
        },
        "contact": {
          "type": "string",
          "title": "Contact number"
        },
        "email": {
          "type": "string",
          "title": "Facility Email"
        },
        "facilityCode": {
          "type": "string",
          "title": "Facility Code"
        },
        "facilityName": {
          "type": "string",
          "title": "Facility Name"
        },
        "geoLocation": {
          "type": "string",
          "title": "Geo Location"
        },
        "operatingHourEnd": {
          "type": "integer",
          "title": "Operating hours end of day"
        },
        "operatingHourStart": {
          "type": "integer",
          "title": "Operating hours start of day"
        },
        "programs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacilityProgramsItems0"
          }
        },
        "serialNum": {
          "type": "integer",
          "title": "Serial Number"
        },
        "stamp": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "title": "Status of Facility",
          "enum": [
            "Active",
            "Inactive",
            "Blocked"
          ]
        },
        "type": {
          "type": "string",
          "title": "Type of Facility",
          "enum": [
            "Fixed location",
            "Mobile",
            "Both"
          ]
        },
        "websiteUrl": {
          "type": "string",
          "title": "Website URL"
        }
      }
    },
    "FacilityAdmin": {
      "properties": {
        "mobile": {
          "type": "string",
          "title": "Facility Admin Mobile Number"
        },
        "name": {
          "type": "string",
          "title": "Facility Admin Name"
        },
        "status": {
          "type": "string",
          "title": "Facility Admin Status"
        }
      }
    },
    "FacilityProgramsItems0": {
      "type": "object",
      "properties": {
        "programId": {
          "type": "string"
        },
        "rate": {
          "type": "number"
        },
        "rateUpdatedAt": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "statusUpdatedAt": {
          "type": "string"
        }
      }
    },
    "FacilityUpdateRequest": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/FacilityUpdateRequestItems0"
      }
    },
    "FacilityUpdateRequestItems0": {
      "type": "object",
      "properties": {
        "osid": {
          "type": "string"
        },
        "programs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacilityUpdateRequestItems0ProgramsItems0"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "FacilityUpdateRequestItems0ProgramsItems0": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "rate": {
          "type": "number"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "FacilityUser": {
      "properties": {
        "employeeId": {
          "type": "string",
          "title": "Facility User Id"
        },
        "enabled": {
          "type": "boolean",
          "title": "enable/disable user"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroup"
          }
        },
        "id": {
          "type": "string",
          "title": "Facility User Id"
        },
        "mobileNumber": {
          "type": "string",
          "title": "Facility User Mobile Number"
        },
        "name": {
          "type": "string",
          "title": "Facility User Name"
        },
        "vaccinationRateLimits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VaccinationRateLimit"
          }
        }
      }
    },
    "NotifyFacilitiesParamsBodyItems0": {
      "type": "object",
      "properties": {
        "facilityId": {
          "type": "string"
        },
        "pendingTasks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Program": {
      "type": "object",
      "title": "Program",
      "required": [
        "name",
        "description",
        "startDate"
      ],
      "properties": {
        "description": {
          "type": "string",
          "title": "Description"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "title": "End Date"
        },
        "logoURL": {
          "type": "string",
          "title": "Logo URL"
        },
        "medicineIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "title": "Name"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "title": "Start Date"
        },
        "status": {
          "type": "string",
          "title": "Status",
          "enum": [
            "Active",
            "Inactive"
          ]
        }
      }
    },
    "ProgramRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "logoURL": {
          "type": "string"
        },
        "medicineIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        }
      }
    },
    "UserGroup": {
      "properties": {
        "id": {
          "type": "string",
          "title": "group id"
        },
        "name": {
          "type": "string",
          "title": "group name"
        }
      }
    },
    "VaccinationRateLimit": {
      "properties": {
        "programName": {
          "type": "string",
          "title": "Program Name"
        },
        "rateLimit": {
          "type": "integer",
          "title": "Maximum rate of vaccination"
        }
      }
    },
    "Vaccinator": {
      "type": "object",
      "title": "The Vaccinator Schema",
      "required": [
        "code",
        "nationalIdentifier",
        "name",
        "facilityIds",
        "mobileNumber",
        "averageRating",
        "trainingCertificate",
        "status"
      ],
      "properties": {
        "averageRating": {
          "type": "number"
        },
        "code": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "title": "vaccinator email"
        },
        "facilityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mobileNumber": {
          "type": "string",
          "maxLength": 10,
          "minLength": 10
        },
        "name": {
          "type": "string",
          "title": "Full name"
        },
        "nationalIdentifier": {
          "type": "string"
        },
        "programs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VaccinatorProgramsItems0"
          }
        },
        "signatureString": {
          "type": "string"
        },
        "signatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/signature"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        },
        "trainingCertificate": {
          "type": "string"
        }
      }
    },
    "VaccinatorProgramsItems0": {
      "type": "object",
      "properties": {
        "certified": {
          "type": "boolean",
          "title": "if vaccinator has certificate for program"
        },
        "programId": {
          "type": "string",
          "title": "Id of the program"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        }
      }
    },
    "VaccinatorUpdateRequest": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VaccinatorUpdateRequestItems0"
      }
    },
    "VaccinatorUpdateRequestItems0": {
      "type": "object",
      "properties": {
        "averageRating": {
          "type": "number"
        },
        "code": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "facilityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mobileNumber": {
          "type": "string",
          "maxLength": 10,
          "minLength": 10
        },
        "name": {
          "type": "string"
        },
        "nationalIdentifier": {
          "type": "string"
        },
        "osid": {
          "type": "object"
        },
        "programs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VaccinatorUpdateRequestItems0ProgramsItems0"
          }
        },
        "signatureString": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        },
        "trainingCertificate": {
          "type": "string"
        }
      }
    },
    "VaccinatorUpdateRequestItems0ProgramsItems0": {
      "type": "object",
      "properties": {
        "certified": {
          "type": "boolean"
        },
        "programId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        }
      }
    },
    "signature": {
      "type": "object",
      "title": "The Signature Schema for the registry",
      "required": [
        "@type",
        "signatureFor",
        "creator",
        "created",
        "signatureValue"
      ],
      "properties": {
        "@type": {
          "type": "string",
          "default": "sc:RsaSignature2018",
          "enum": [
            "sc:LinkedDataSignature2015",
            "sc:GraphSignature2012",
            "sc:RsaSignature2018"
          ],
          "$id": "#/properties/@type"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "$comment": "Timestamp",
          "$id": "#/properties/created",
          "examples": [
            "2017-09-23T20:21:34Z"
          ]
        },
        "creator": {
          "type": "string",
          "format": "uri",
          "$comment": "IRI where the public key associated could be retrieved",
          "$id": "#/properties/creator",
          "examples": [
            "https://example.com/i/pat/keys/"
          ]
        },
        "nonce": {
          "type": "string",
          "$comment": "Some unique value for tracking",
          "$id": "#/properties/nonce",
          "examples": [
            "guid"
          ]
        },
        "signatureFor": {
          "type": "string",
          "$comment": "The attribute name or entity id you for which this is the signature",
          "$id": "#/properties/signatureFor",
          "examples": [
            "http://localhost:8080/serialNum",
            "http://localhost:8080/9cba6ddd-330c-4a0d-929a-771bb12cb0d3"
          ]
        },
        "signatureValue": {
          "type": "string",
          "$comment": "Hash or signed value",
          "$id": "#/properties/signatureValue",
          "examples": [
            "eyiOiJKJeXAasddOEjgFWFXk"
          ]
        }
      },
      "$id": "#/properties/Signature"
    }
  },
  "securityDefinitions": {
    "hasRole": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://dummy.oauth.net/auth",
      "tokenUrl": "https://dumy.oauth.net/token",
      "scopes": {
        "admin": "scope of super admin",
        "facility-admin": "scope of facility admin"
      }
    }
  },
  "security": [
    {
      "hasRole": [
        "admin"
      ]
    }
  ]
}`))
}
